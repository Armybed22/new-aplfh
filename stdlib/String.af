class String {
    # The constructor method
    f String(value) {
        v this.value = value
        
        # Builtin attributes
        v this.ascii_uppercase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
        v this.ascii_lowercase = "abcdefghijklmnopqrstuvwxyz"
        v this.ascii_letters = this.ascii_uppercase + this.ascii_lowercase
        v this.digits = "0123456789"
        v this.hexdigits = "0123456789abcdefABCDEF"
        v this.octdigits = "01234567"
        v this.punctuation = "!#$%&'()*+,-./:;<=>?@[\]^_`{|}~"
        v this.whitespace = " "
        v this.tab = "    "
    }


    #TODO: Need to fix;

    #f join(separator) {
    #    v result = ""
    #
    #    for i = 0 to str_len(this.value) {
    #        result = result + this.value[i]
    #        if i < str_len(this.value) - 1 {
    #            result = result + separator
    #        }
    #    }
    #    return result
    #}

    # Find a character in a string and return its index
    f find(data) {
        v result = 0

        for i = 0 to str_len(this.value) {
            if this.value == data {
                return i
            }
        }
        return -1
    }

    # Magic method to convert string to int if possible
    f to_int() {
        if is_num(this.value) == true {
            return int(this.value)
        } else {
            return false
        }
    }

    # Return the length of the string
    # f len() -> return str_len(this.value)
    f to_string() -> this.value
}